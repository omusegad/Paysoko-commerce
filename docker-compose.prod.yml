
services:
  # Laravel application (Backend)
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: paysoko_app
    env_file:
      - .env.production
    volumes:
      - ./backend:/var/www
    networks:
      - app-network
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=ecommerce
      - DB_USERNAME=root
      - DB_PASSWORD=secret
    depends_on:
      - db
      - redis

  # Next.js frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: paysoko_frontend
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost/api
    stdin_open: true
    tty: true
    depends_on:
      - app

  # MySQL database
  db:
    image: mysql:8
    container_name: mysql_db
    volumes:
      - dbdata:/var/lib/mysql
    restart: always
    environment:
      MYSQL_DATABASE: ecommerce
      MYSQL_ROOT_PASSWORD: G5Nk4VykcUw
    networks:
      - app-network

  # Redis cache
  redis:
    image: redis:6.2
    container_name: redis_cache
    restart: always
    networks:
      - app-network

  # Nginx reverse proxy
  nginx:
    image: nginx:latest
    container_name: nginx_server
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./backend:/var/www
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - app
      - frontend

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
